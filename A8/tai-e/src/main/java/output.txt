Points-to sets of all variables
[]:<CSTaint$A: java.lang.String get()>/%this -> [[]:NewObj{<CSTaint: void main(java.lang.String[])>[0@L4] new CSTaint$A}, []:NewObj{<CSTaint: void main(java.lang.String[])>[9@L9] new CSTaint$A}]
[]:<CSTaint$A: java.lang.String get()>/temp$0 -> [[]:NewObj{<CSTaint: void main(java.lang.String[])>[3@L5] new java.lang.String}, []:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<CSTaint: void main(java.lang.String[])>[12@L10] temp$4 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<CSTaint$A: void <init>()>/%this -> [[]:NewObj{<CSTaint: void main(java.lang.String[])>[0@L4] new CSTaint$A}, []:NewObj{<CSTaint: void main(java.lang.String[])>[9@L9] new CSTaint$A}]
[]:<CSTaint$A: void set(java.lang.String)>/%this -> [[]:NewObj{<CSTaint: void main(java.lang.String[])>[0@L4] new CSTaint$A}, []:NewObj{<CSTaint: void main(java.lang.String[])>[9@L9] new CSTaint$A}]
[]:<CSTaint$A: void set(java.lang.String)>/s -> [[]:NewObj{<CSTaint: void main(java.lang.String[])>[3@L5] new java.lang.String}, []:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<CSTaint: void main(java.lang.String[])>[12@L10] temp$4 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<CSTaint: void main(java.lang.String[])>/a1 -> [[]:NewObj{<CSTaint: void main(java.lang.String[])>[0@L4] new CSTaint$A}]
[]:<CSTaint: void main(java.lang.String[])>/a2 -> [[]:NewObj{<CSTaint: void main(java.lang.String[])>[9@L9] new CSTaint$A}]
[]:<CSTaint: void main(java.lang.String[])>/s1 -> [[]:NewObj{<CSTaint: void main(java.lang.String[])>[3@L5] new java.lang.String}]
[]:<CSTaint: void main(java.lang.String[])>/s2 -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<CSTaint: void main(java.lang.String[])>[12@L10] temp$4 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<CSTaint: void main(java.lang.String[])>/temp$0 -> [[]:NewObj{<CSTaint: void main(java.lang.String[])>[0@L4] new CSTaint$A}]
[]:<CSTaint: void main(java.lang.String[])>/temp$1 -> [[]:NewObj{<CSTaint: void main(java.lang.String[])>[3@L5] new java.lang.String}]
[]:<CSTaint: void main(java.lang.String[])>/temp$2 -> [[]:NewObj{<CSTaint: void main(java.lang.String[])>[3@L5] new java.lang.String}, []:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<CSTaint: void main(java.lang.String[])>[12@L10] temp$4 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<CSTaint: void main(java.lang.String[])>/temp$3 -> [[]:NewObj{<CSTaint: void main(java.lang.String[])>[9@L9] new CSTaint$A}]
[]:<CSTaint: void main(java.lang.String[])>/temp$4 -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<CSTaint: void main(java.lang.String[])>[12@L10] temp$4 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<CSTaint: void main(java.lang.String[])>/temp$5 -> [[]:NewObj{<CSTaint: void main(java.lang.String[])>[3@L5] new java.lang.String}, []:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<CSTaint: void main(java.lang.String[])>[12@L10] temp$4 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<SourceSink: java.lang.String source()>/temp$0 -> [[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}]
[]:<SourceSink: void sink(java.lang.String)>/s -> [[]:NewObj{<CSTaint: void main(java.lang.String[])>[3@L5] new java.lang.String}, []:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<CSTaint: void main(java.lang.String[])>[12@L10] temp$4 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:<java.lang.Object: void <init>()>/%this -> [[]:NewObj{<CSTaint: void main(java.lang.String[])>[0@L4] new CSTaint$A}, []:NewObj{<CSTaint: void main(java.lang.String[])>[3@L5] new java.lang.String}, []:NewObj{<CSTaint: void main(java.lang.String[])>[9@L9] new CSTaint$A}, []:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}]
[]:<java.lang.String: void <init>()>/$b0 -> []
[]:<java.lang.String: void <init>()>/$r2 -> []
[]:<java.lang.String: void <init>()>/%this -> [[]:NewObj{<CSTaint: void main(java.lang.String[])>[3@L5] new java.lang.String}, []:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}]

Points-to sets of all static fields

Points-to sets of all instance fields
[]:NewObj{<CSTaint: void main(java.lang.String[])>[0@L4] new CSTaint$A}.f -> [[]:NewObj{<CSTaint: void main(java.lang.String[])>[3@L5] new java.lang.String}, []:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<CSTaint: void main(java.lang.String[])>[12@L10] temp$4 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:NewObj{<CSTaint: void main(java.lang.String[])>[3@L5] new java.lang.String}.coder -> []
[]:NewObj{<CSTaint: void main(java.lang.String[])>[3@L5] new java.lang.String}.value -> []
[]:NewObj{<CSTaint: void main(java.lang.String[])>[9@L9] new CSTaint$A}.f -> [[]:NewObj{<CSTaint: void main(java.lang.String[])>[3@L5] new java.lang.String}, []:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}, []:TaintObj{alloc=<CSTaint: void main(java.lang.String[])>[12@L10] temp$4 = invokestatic SourceSink.source(),type=java.lang.String}]
[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}.coder -> []
[]:NewObj{<SourceSink: java.lang.String source()>[0@L3] new java.lang.String}.value -> []

Points-to sets of all array indexes

Detected 2 taint flow(s):
TaintFlow{<CSTaint: void main(java.lang.String[])>[12@L10] temp$4 = invokestatic <SourceSink: java.lang.String source()>(); -> <CSTaint: void main(java.lang.String[])>[8@L7] invokestatic <SourceSink: void sink(java.lang.String)>(temp$2);/0}
TaintFlow{<CSTaint: void main(java.lang.String[])>[12@L10] temp$4 = invokestatic <SourceSink: java.lang.String source()>(); -> <CSTaint: void main(java.lang.String[])>[16@L12] invokestatic <SourceSink: void sink(java.lang.String)>(temp$5);/0}
